///////////////////////////////////////////
// Agents, or entities in the simulation //
///////////////////////////////////////////

// The internal states of the agents:
//  - m{f q}   : movement - free or quarantined
//  - t{p n x} : tested - negative or positive or untested
%agent: S(m{f q})
%agent: E(m{f q})
%agent: I(m{f q}, t{p n x})
%agent: R(m{f q})
%agent: F()

///////////////
// Variables //
///////////////
%var: 'N'       100000   // population size
%var: 'Init_I'  N*0.01   // start out with 1% of population infected
%var: 'Init_S' 'N'-'Init_I'

%var: 'R0'      3
%var: 'epsilon' 1/3.7     // 1 / latency period
%var: 'mu'      1/10      // 1 / infectious period
%var: 'beta'    'R0'*'mu' // infection rate

%var: 'ifr'   0.025    // infection fatality rate
//%var: 'theta' 100/N    // testing rate of infected people
%var: 'acc'   0.8      // testing accuracy
%var: 'ctr'   2        // contact tracing rate i.e. 2 days

%var: 'qrate' 1/14     // average quarantine two weeks
 
////////////////////////////////////
// Rules for freely-moving people //
////////////////////////////////////
'exposure_f'    S(m{f}), ., I(m{f}) -> ., E(m{f}), I(m{f}) @ beta/N
'progression_f' E(m{f}), .          -> ., I(m{f}) @ epsilon
'recovery_f'    I(m{f}), .          -> ., R(m{f}) @ (1 - ifr)*mu
'fatality_f'    I(), .              -> ., F() @ ifr*mu

//////////////////////////////////////////////////////////////
// Testing - test at a certain rate theta with accuracy acc //
//////////////////////////////////////////////////////////////
'testing_f_p'   I(m{f}, t{x}) -> I(m{q}, t{p}) @ theta * acc
'testing_q_p'   I(m{q}, t{x}) -> I(m{q}, t{p}) @ theta * acc
'testing_fn'    I(t{x})       -> I(t{n}) @ theta * (1 - acc)

////////////////////////////////////////////////////////////////////
// Quarantine - quarantine proportionally to infected, positively //
//              tested individuals, on average with a day         //
////////////////////////////////////////////////////////////////////
'quarantine_S'  S(m{f}), I(m{q}, t{p}) -> S(m{q}), I(m{q}, t{p}) @ ctr
'quarantine_E'  E(m{f}), I(m{q}, t{p}) -> E(m{q}), I(m{q}, t{p}) @ ctr
'quarantine_I'  I(m{f}), I(m{q}, t{p}) -> I(m{q}), I(m{q}, t{p}) @ ctr
'quarantine_R'  R(m{f}), I(m{q}, t{p}) -> R(m{q}), I(m{q}, t{p}) @ ctr

// exit quarantine after 14 days on average
'exit_S' S(m{q}) -> S(m{f}) @ qrate
'exit_R' R(m{q}) -> R(m{f}) @ qrate

// progression of quarantined individuals
'progression_q' E(m{q}), . -> ., I(m{q}) @ epsilon
'recovery_q'    I(m{q}), . -> ., R(m{q}) @ (1 - ifr)*mu

/////////////////
// Observables //
/////////////////
%obs: 'S'  |S(m{f})|/N     // Susceptible and free
%obs: 'E'  |E(m{f})|/N     // Exposed and free
%obs: 'I'  |I(m{f})|/N     // Infectious and free
%obs: 'R'  |R(m{f})|/N     // Recovered and free
%obs: 'QS' |S(m{q})|/N     // Susceptible and quarantined
%obs: 'QE' |E(m{q})|/N     // Exposed and quarantined
%obs: 'QI' |I(m{q})|/N     // Infectious and quarantined
%obs: 'QR' |R(m{q})|/N     // Recovered and quarantined
%obs: 'Tp' |I(t{p})|/|I()| // Infectious and positively tested
%obs: 'Tn' |I(t{n})|/|I()| // Infectious and negatively tested
%obs: 'F'  |F()|/N

////////////////////
// Initialisation //
////////////////////
%init: Init_S  S(m{f})
%init: Init_I  I(m{f}, t{x})

